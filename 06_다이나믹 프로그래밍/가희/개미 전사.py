# 식량 창고 n개에 대한 정보가 주어졌을 때, 
# 얻을 수 있는 식량의 최댓값 구하는 프로그램

# 일직선으로 이어진 식량 창고가 있을 때,
# 개미 전사는 최소한 한 칸 이상 떨어진 식량 창고를 약탈한다.
# (서로 인접한 식량 창고 약탈 x)


# 식량 창고의 개수 n (3 <= n <= 100)
n = int(input())

# 식량 창고에 저장된 식량 개수 k (0 <= k <= 1,000)
array = list(map(int, input().split()))

# DP 테이블 초기화
d = [0] * 100

# 보텀업 다이나믹 프로그래밍
d[0] = array[0]
d[1] = max(array[0], array[1])
for i in range(2, n):
    # i-1번째 식량 창고를 털기로 한 경우(현재 창고는 못 턺)와
    # i-2번째 식량 창고를 털기로 한 경우(현재 창고는 털 수 o) 비교
    # 현재 창고의 식량 개수 ~ array[i]
    d[i] = max(d[i-1], d[i-2] + array[i])
    
# 개미 전사가 얻을 수 있는 식량의 최댓값
print(d[n-1])

